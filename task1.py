"""
Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами
на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
● алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
● постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""
import random


def bubble_sort_v1(array):
    n = 1
    while n < len(array):
        for i in range(len(array) - 1):
            if array[i] < array[i + 1]:
                array[i], array[i + 1] = array[i + 1], array[i]
        n += 1


# в такой версии с флагом нет необходимости в обязательном обходе всего массива
# как только на очередной итерации не встретится элементов с неправильной позицией, алгоритм прекратится
# но в худшем случае работает так же, как и 1 версия
def bubble_sort_v2(array):
    flag = True
    while flag:
        flag = False
        for i in range(len(array) - 1):
            if array[i] < array[i + 1]:
                array[i], array[i + 1] = array[i + 1], array[i]
                flag = True


lst = [random.randrange(-100, 100) for _ in range(10)]
print(lst)
bubble_sort_v2(lst)
print(lst)
